{"version":3,"sources":["pages/LST/PrintLST.js","pages/LST/LSTHistory.js","components/Modal/AssetFilters/CustomerSelection.js"],"names":["StyleSheet","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","LSTHistory","useState","activerowid","setActiveRowId","useContext","TopBarContext","setTopHeading","topheading","setPage","data","setData","refresh","setRefresh","status","setstatus","location","setLocation","ToLocation","setToLocation","condition","selectedprod","searchquery","setSearchQuery","totalResults","setTotalResults","activeRowID","setActiveRowID","useEffect","a","console","log","payload","pages","limit","filters","from","to","axios","url","API","Emp","getId","method","response","out","total","className","class","value","onChange","e","target","disabled","selected","xmlns","viewBox","d","onSubmit","preventDefault","placeholder","onClick","map","user","i","_id","key","LSTNo","moment","date","format","invItems","length","layout","aria-label","size","aria-hidden","items","type","name","sno","invnumber","resultsPerPage","label","p","CustomerSelection","isModalOpen","setIsModalOpen","unit","setUnit","account","setAccount","customer","setCustomer","customers","setCustomers","accounts","setAccounts","units","setUnits","tabIndex","setTabIndex","search","setSearch","handleChange","handleSubmit","role","pickCustomer","customerName","accountName","unitName","Axios","post","customerId","accs","pickAccount","accountId","u","pickUnit","isOpen","onClose","selectedIndex","onSelect","ind"],"mappings":"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","file":"static/js/15.80f1372a.chunk.js","sourcesContent":["import React from 'react'\nimport { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\n\nexport default function PrintLST({item}) {\n    return (\n        <Document>\n      <Page size=\"A4\" style={styles.page}>\n        <View style={styles.section}>\n          <Text>{item.to}</Text>\n        </View>\n        <View style={styles.section}>\n          <Text>Section #2</Text>\n        </View>\n      </Page>\n    </Document>\n    )\n}\n\n// Create styles\nconst styles = StyleSheet.create({\n    page: {\n      flexDirection: 'row',\n      backgroundColor: '#E4E4E4'\n    },\n    section: {\n      margin: 10,\n      padding: 10,\n      flexGrow: 1\n    }\n  });","import React, { useState, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { Page, Text, View, Document, StyleSheet,PDFDownloadLink } from '@react-pdf/renderer';\nimport ReactPDF from '@react-pdf/renderer';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport { EditIcon, TrashIcon,DropdownIcon } from \"../../icons\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  Button,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport { API } from \"../../backendapi\";\nimport CustomerSelection from \"../../components/Modal/AssetFilters/CustomerSelection\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport { Link } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport PrintLST from \"./PrintLST\";\n\nfunction LSTHistory() {\n  \n\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const [floatbox, setFloatBox] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  // dropdown and modals\n \n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [status, setstatus] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [ToLocation, setToLocation] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  const [activeRowID, setActiveRowID] = useState(-1);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n \n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"LST History\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          // type: type,\n          from: location,\n          to: ToLocation,\n          status:status,\n          // searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/lst/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, location, ToLocation ,condition, status, refresh]);\n\n  console.log(selectedprod);\n\nconst InvTable=(items)=>{\n  \n  return (\n    <div className=\" bg-gray-200 dark:bg-gray-700 p-3\">\n      \n\n      <div className=\"mb- mt-4\">\n        \n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr>\n              <TableCell>Type</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Serial Number</TableCell>\n                <TableCell>Location</TableCell>\n                <TableCell>Inv Number</TableCell>\n                <TableCell>Condition</TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {items.map((user, i) => (\n                <TableRow\n                  className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                    activerowid == user._id\n                      ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                      : \"white\"\n                  } `}\n                  key={i}\n                  onClick={() => {\n                    setActiveRowId(user._id);\n                    // console.log(\"the id is \" + user._id);\n                    // setSelectedProd(user);\n                    // setAssetDetails(user);\n                    // console.log(user.product.keyboard[0].kbdname);\n                  }}\n                >\n                   <TableCell className=\"w-8\">\n                    <div className=\"flex items-center text-sm \">\n                      {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                      <div>\n                        <p className=\"font-semibold\">{user.type}</p>\n                        {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p> */}\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.name}</span>\n                  </TableCell>\n\n                  <TableCell>\n                    <span className=\"text-sm\">{user.sno}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.location}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.invnumber}</span>\n                  </TableCell>\n                  <TableCell>\n                    <Badge\n                      type={user.condition == \"Good\" ? \"primary\" : \"danger\"}\n                    >\n                      {user.condition}\n                    </Badge>\n                  </TableCell>\n\n                 \n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          \n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </div>\n  );\n \n}\n\n\n\n\n\n  return (\n    <>\n      \n\n      <div className=\"mb-64 mt-4\">\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-2 \">\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={status}\n                onChange={(e) => {\n                  setstatus(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                   Type\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"In Transit\">In Transit</option>\n                <option value=\"Recieved\">Recieved</option>\n                \n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -----------------------------------------Location ----------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={location}\n                onChange={(e) => {\n                  setLocation(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  From Location\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayum\">Kottayum</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n             {/* -----------------------------------------Location ----------------------- */}\n             <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={ToLocation}\n                onChange={(e) => {\n                  setToLocation(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  To Location\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayum\">Kottayum</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* ---------------------------Condition Drop Down-------------------------------------- */}\n            {/* <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={condition}\n                onChange={(e) => {\n                  setCondition(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Condition\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Good\">Good</option>\n                <option value=\"Bad\">Bad</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div> */}\n\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search LST Number\"\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr className=\"flex flex-row justify-between\">\n                <TableCell>LST.No</TableCell>\n                <TableCell>From</TableCell>\n                <TableCell>To</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>No.</TableCell>\n                {/* <TableCell>Status</TableCell> */}\n                <TableCell> Report</TableCell>\n                <TableCell><span  className=\"cursor-pointer\" onClick={()=>setActiveRowID(-1)}>Items</span></TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <div className=\"flex flex-col justify-around\">\n                <TableRow\n                  className={`hover:shadow-lg dark:hover:bg-gray-600 flex flex-row justify-between  ${\n                    activerowid == user._id\n                      ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                      : \"white\"\n                  } `}\n                  key={i}\n                  onClick={() => {\n                    setActiveRowId(i);\n                    // console.log(\"the id is \" + user._id);\n                    // setSelectedProd(user);\n                    // setAssetDetails(user);\n                    // console.log(user.product.keyboard[0].kbdname);\n                  }}\n                >\n                  <TableCell className=\"w-8\">\n                    <div className=\"flex items-center text-sm \">\n                      \n                      <div>\n                        <p className=\"font-semibold\">{user.LSTNo}</p>\n                       \n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.from}</span>\n                  </TableCell>\n\n                  <TableCell>\n                    <span className=\"text-sm\">{user.to}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\"> {moment(user.date).format(\"DD/MM/YYYY\")}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.invItems.length}</span>\n                  </TableCell>\n                  {/* <TableCell>\n                    <Badge>\n                      condition\n                    </Badge>\n                  </TableCell> */}\n                  <TableCell className=\"text-center \">\n                  <Button\n                        \n                        layout=\"outline\"\n                        aria-label=\"DropDown\"\n                        onClick={()=>{\n                          console.log(\"dwlod\")\n                          \n                        }}\n                        className=\"rounded-lg m-1\"\n                      >\n                       Download\n                      </Button>\n                  </TableCell>\n                  <TableCell className=\"text-center \">\n                  <Button\n                        // layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"DropDown\"\n                        onClick={()=>{\n                          console.log(activerowid)\n                            // if(activerowid==i){\n                              \n                              // setActiveRowID(-1);\n                            // }\n                            // else\n                             setActiveRowID(i);\n\n\n                    \n                          }}\n                        className=\"rounded-lg m-1\"\n                      >\n                        <DropdownIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                  </TableCell>\n\n                 \n                </TableRow>\n\n\n                {(activeRowID==i) ?InvTable(user.invItems):null}\n                </div>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n     \n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n}\n\nexport default LSTHistory;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../../backendapi\";\n\nexport default function CustomerSelection({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n  refresh,\n  setRefresh,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      //   setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      //   setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              setRefresh(!refresh);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}