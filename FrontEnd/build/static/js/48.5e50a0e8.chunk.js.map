{"version":3,"sources":["pages/Employee/CreateEmployee.js"],"names":["CreateEmployee","useHistory","useState","accType","setAccType","sex","setSex","dob","setDob","location","setLocation","isReviewModalOpen","setIsReviewModalOpen","isReqFieldModal","setIsReqFieldModal","setTopHeading","useContext","TopBarContext","employeeID","email","password","confpassword","employeeName","address","district","state","pincode","contactPerson","contactNo","contactNoLand","contactPersonOcc","altContact","WhatsappNo","age","values","setValues","name","enc_password","err","setErr","useEffect","handleChange","e","target","value","submitCustomer","a","newuser","role","whatsappNo","console","log","signup","Emp","getId","then","data","_id","username","customerName","catch","className","type","onChange","valid","parseInt","placeholder","length","onClick","aria-label","aria-haspopup","addForm","isOpen","onClose"],"mappings":"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","file":"static/js/48.5e50a0e8.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport CustomerCreateModal from \"../../components/Modal/CustomerCreateModal\";\nimport EmpProfile from \"../../helpers/auth/EmpProfile\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { resetIdCounter } from \"react-tabs\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { unitCreate } from \"../../helpers/unitHelper\";\nimport AddUnitModal from \"../../components/Modal/AddUnitModal\";\nimport { useHistory } from \"react-router-dom\";\n/////////////----------------->>>>>> bug <<<<<------------customerList refresh--------------------------\n\nfunction CreateEmployee() {\n  let history = useHistory();\n  // dropdown states\n  const [accType, setAccType] = useState(0); /////// 0-Customer 1-Account 2-Unit\n  const [sex, setSex] = useState(\"Male\");\n  const [dob, setDob] = useState(\"\");\n  const [location, setLocation] = useState(\"All\");\n\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isErrModalOpen, setIsErrModalOpen] = useState(false);\n  const [isReqFieldModal, setIsReqFieldModal] = useState(false);\n  const { setTopHeading } = useContext(TopBarContext);\n\n  const [values, setValues] = useState({\n    //both\n\n    employeeID: \"\",\n    email: \"\",\n    password: \"\",\n    confpassword: \"\",\n    employeeName: \"\",\n    address: \"\",\n    district: \"\",\n    state: \"\",\n    pincode: \"\",\n    contactPerson: \"\",\n    contactNo: \"\",\n    contactNoLand: \"\",\n    contactPersonOcc: \"\",\n    altContact: \"\",\n    WhatsappNo: \"\",\n    age: \"\",\n\n    // ---new ones\n  });\n\n  const [err, setErr] = useState({\n    email: \"\",\n    name: \"\",\n    // accountName: \"\",\n    enc_password: \"\",\n    confpassword: \"\",\n  });\n\n  // ----------------------Heading Use Effect-------------\n\n  useEffect(() => {\n    setTopHeading(\"Add Employee\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const handleConfPassChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n    if (values.password !== e.target.value) {\n      setErr({ ...err, confpassword: \"Confirm password does not match\" });\n    } else setErr({ ...err, confpassword: \"\" });\n  };\n\n  const submitCustomer = async () => {\n    if (values.password !== values.confpassword) {\n      setErr({ ...err, confpassword: \"Confirm password does not match\" });\n      return;\n    }\n    if (\n      (values.employeeID === \"\") |\n      (values.employeeName === \"\") |\n      (values.email === \"\") |\n      (values.password === \"\") |\n      (values.confpassword === \"\")\n    ) {\n      setIsReqFieldModal(true);\n      return;\n    }\n    // e.preventDefault();\n    const newuser = {\n      employeeID: values.employeeID,\n      employeeName: values.employeeName,\n      email: values.email,\n      password: values.password,\n      role: accType,\n      address: values.address,\n      district: values.district,\n      state: values.state,\n      pincode: values.pincode,\n      contactPerson: values.contactPerson,\n      contactNo: values.contactNo,\n      contactNoLand: values.contactNoLand,\n      contactPersonOcc: values.contactPersonOcc,\n      whatsappNo: values.WhatsappNo,\n      sex: sex,\n      age: values.age,\n      dob: dob,\n      location: location,\n    };\n    console.log(newuser);\n    signup(newuser, `admin/${Emp.getId()}/signup`)\n      .then((data) => {\n        console.log(\"Signed Up\", data._id);\n        setIsReviewModalOpen(true);\n        setErr({\n          employeeID: \"\",\n          username: \"\",\n          email: \"\",\n          customerName: \"\",\n          enc_password: \"\",\n          confpassword: \"\",\n        });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        setErr({ ...err });\n      });\n  };\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>\n            {accType === 0 ? <>Admin </> : null}\n            {accType === 11 ? <>Engineer </> : null}\n            {accType === 12 ? <>Assistant </> : null}\n            Created Successfully!\n          </ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              // onClick={() => setIsReviewModalOpen(false)}\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const ReqFieldErrModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReqFieldModal}\n          onClose={() => setIsReqFieldModal(false)}\n        >\n          <ModalHeader>Required fields are not filled!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReqFieldModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //ASSET\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Add Employee</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n        {/* -----Row 0 --------- */}\n        <div className=\"flex-row flex  space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Employee ID*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.employeeID}\n                onChange={handleChange(\"employeeID\")}\n              />\n            </Label>\n            <HelperText valid={false}>{err.employeeID}</HelperText>\n          </div>\n        </div>\n        {/* ------------------------Row 1-------------------------- */}\n        <div className=\"flex-row flex  space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Select Account Type*</span>\n              <Select\n                className=\"mt-1\"\n                onChange={(e) => {\n                  setAccType(parseInt(e.target.value));\n                }}\n              >\n                <option value=\"0\">Admin</option>\n                <option value=\"11\">Engineer</option>\n                <option value=\"12\">Assistant</option>\n                <option value=\"13\">Store Keeper</option>\n                <option value=\"14\">Coordinator</option>\n                <option value=\"15\">Accounts</option>\n              </Select>\n            </Label>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Location</span>\n              <Select\n                className=\"mt-1\"\n                onChange={(e) => {\n                  setLocation(e.target.value);\n                }}\n              >\n                <option value=\"All\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </Select>\n            </Label>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Employee Name*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.employeeName}\n                onChange={handleChange(\"employeeName\")}\n              />\n            </Label>\n            <HelperText valid={false}>{err.employeeName}</HelperText>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full \">\n              <span>Email*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"email\"\n                placeholder=\"\"\n                value={values.email}\n                onChange={handleChange(\"email\")}\n              />\n            </Label>\n            <HelperText valid={false}>{err.email}</HelperText>\n          </div>\n        </div>\n        {/* ----------------------Row 2 ----------------------------- */}\n        <div className=\"flex-row flex space-x-3 \">\n          <Label className=\"w-full mt-4\">\n            <span>Password*</span>\n            <Input\n              className=\"mt-1\"\n              placeholder=\"\"\n              type=\"password\"\n              value={values.password}\n              onChange={handleChange(\"password\")}\n            />\n          </Label>\n          <HelperText valid={false}>{err.enc_password}</HelperText>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full mt-4\">\n              <span>Confirm password*</span>\n\n              <Input\n                className=\"mt-1\"\n                type=\"password\"\n                value={values.confpassword}\n                onChange={handleConfPassChange(\"confpassword\")}\n              />\n            </Label>\n\n            <HelperText valid={false}>{err.confpassword}</HelperText>\n          </div>\n        </div>\n        {/* ///////////////////////////////////////////////////////// */}\n        <Label className=\"font-bold mt-5 mb-2\">\n          <span>Additional Information</span>\n        </Label>\n        <hr />\n        {/* -------Row - 3 ---------------------- */}\n        <div className=\"flex-row flex space-x-3 mt-3 mb-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Sex</span>\n              <Select\n                className=\"mt-1\"\n                onChange={(e) => {\n                  setSex(e.target.value);\n                }}\n              >\n                <option value=\"Male\">Male</option>\n                <option value=\"Female\">Female</option>\n                <option value=\"Other\">Other</option>\n              </Select>\n            </Label>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Contact Number(Mobile)</span>\n              <Input\n                className=\"mt-1\"\n                value={values.contactNo}\n                onChange={handleChange(\"contactNo\")}\n              />\n            </Label>{\" \"}\n            {values.contactNo.length != 10 && values.contactNo != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  Phone number shound be 10 digits\n                </HelperText>\n              </>\n            ) : null}\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Contact Number(Landline)</span>\n              <Input\n                className=\"mt-1\"\n                value={values.contactNoLand}\n                onChange={handleChange(\"contactNoLand\")}\n              />\n            </Label>{\" \"}\n            {/* {values.contactNoLand.length != 10 && values.contactNoLand != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  Phone number shound be 10 digits\n                </HelperText>\n              </>\n            ) : null} */}\n          </div>\n          {/* <HelperText valid={false}>{digiterr.contactNo}</HelperText> */}\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Whatsapp Number</span>\n              <Input\n                className=\"mt-1\"\n                value={values.WhatsappNo}\n                onChange={handleChange(\"WhatsappNo\")}\n              />\n            </Label>\n            {values.WhatsappNo.length != 10 && values.WhatsappNo != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  Phone number shound be 10 digits\n                </HelperText>\n              </>\n            ) : null}\n          </div>\n        </div>\n        {/* ---------------Row 4 ---------------- */}\n        <div className=\"flex-row flex space-x-3 mt-3 mb-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>DOB</span>\n              <Input\n                className=\"mt-1\"\n                type=\"date\"\n                name=\"brand\"\n                value={dob}\n                onChange={(e) => {\n                  setDob(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Age</span>\n              <Input\n                className=\"mt-1\"\n                value={values.age}\n                onChange={handleChange(\"age\")}\n              />\n            </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Father/Husband Name</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.contactPerson}\n                onChange={handleChange(\"contactPerson\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Father/Husband's Occupation</span>\n              <Input\n                className=\"mt-1\"\n                value={values.contactPersonOcc}\n                onChange={handleChange(\"contactPersonOcc\")}\n              />\n            </Label>{\" \"}\n          </div>\n          {/* <HelperText valid={false}>{digiterr.contactNo}</HelperText> */}\n        </div>\n        {/* -----------------------Row-5 ------------- */}\n        <Label className=\"my-2\">\n          <span>Address</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.address}\n            onChange={handleChange(\"address\")}\n          />\n        </Label>{\" \"}\n        {/* ---------------Row - 6 ---------------------- */}\n        <div className=\"flex-row flex space-x-3 my-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>District</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.district}\n                onChange={handleChange(\"district\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>State</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.state}\n                onChange={handleChange(\"state\")}\n              />\n            </Label>{\" \"}\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>PIN code</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.pincode}\n                onChange={handleChange(\"pincode\")}\n              />\n            </Label>{\" \"}\n            {values.pincode.length != 6 && values.pincode != 0 ? (\n              <>\n                <HelperText valid={false}>PIN shound be 6 digits</HelperText>\n              </>\n            ) : null}\n          </div>\n        </div>\n        {/* ///////////////////////////////////////////////////////// */}\n        <Button\n          onClick={submitCustomer}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4\"\n        >\n          Add Employee\n        </Button>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {/* <PageTitle>Add Customer</PageTitle> */}\n      {addForm()}\n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n\n      {ReqFieldErrModal()}\n    </>\n  );\n}\n\nexport default CreateEmployee;\n"],"sourceRoot":""}