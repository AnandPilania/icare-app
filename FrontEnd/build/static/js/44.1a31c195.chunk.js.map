{"version":3,"sources":["pages/Customers/CreateUnit.js"],"names":["CreateUnit","useState","isModalOpen","setIsModalOpen","isReviewModalOpen","setIsReviewModalOpen","isErrModalOpen","setIsErrModalOpen","_id","customerName","customer","setCustomer","accountName","account","setAccount","unitName","assetId","address","district","state","locationType","pincode","GSTnumber","contactPerson","contactNo","altContact","WhatsappNo","values","setValues","handleChange","name","e","target","value","submitUnit","a","payload","customerId","customerMame","accountId","whatsappNo","unitCreate","then","data","console","log","catch","err","AddUnitModal","PageTitle","className","type","onChange","onClick","aria-label","aria-haspopup","isOpen","onClose"],"mappings":"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","file":"static/js/44.1a31c195.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport CustomerCreateModal from \"../../components/Modal/CustomerCreateModal\";\nimport { unitCreate } from \"../../helpers/unitHelper\";\nimport AccountListModal from \"../../components/Modal/AccountListModel\";\nimport AddUnitModal from \"../../components/Modal/AddUnitModal\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nfunction CreateUnit() {\n  //modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isErrModalOpen, setIsErrModalOpen] = useState(false);\n\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n  const [values, setValues] = useState({\n    unitName: \"defaultUnit\",\n    assetId: [],\n    address: \"default\",\n    district: \"default\",\n    state: \"default\",\n    locationType: \"default\",\n    pincode: \"default\",\n    GSTnumber: \"default\",\n    contactPerson: \"default\",\n    contactNo: \"default\",\n    altContact: \"default\",\n    WhatsappNo: \"default\",\n  });\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const submitUnit = async (e) => {\n    if (customer._id == \"\" || account._id == \"\") {\n      setIsErrModalOpen(true);\n      return;\n    }\n    // e.preventDefault();\n    const payload = {\n      customerId: customer._id,\n      customerName: customer.customerMame,\n      accountId: account._id,\n      accountName: account.accountName,\n\n      unitName: values.unitName,\n      address: values.address,\n      district: values.district,\n      state: values.state,\n      locationType: values.locationType,\n      pincode: values.pincode,\n      GSTnumber: values.GSTnumber,\n      contactPerson: values.contactPerson,\n      contactNo: values.contactNo,\n      altContact: values.altContact,\n      whatsappNo: values.WhatsappNo,\n    };\n    unitCreate(payload)\n      .then((data) => {\n        console.log(\"Signed Up\", data);\n        setIsReviewModalOpen(true);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        // setErr({ ...err });\n      });\n  };\n\n  //ASSET\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Add Unit</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n        <Label>\n          <span>Unit Name</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.unitName}\n            onChange={handleChange(\"unitName\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Address</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.address}\n            onChange={handleChange(\"address\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>District</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.district}\n            onChange={handleChange(\"district\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>state</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.state}\n            onChange={handleChange(\"state\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Location Type</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.locationType}\n            onChange={handleChange(\"locationType\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>PIN code</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.pincode}\n            onChange={handleChange(\"pincode\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>GST Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.GSTnumber}\n            onChange={handleChange(\"GSTnumber\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Person</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactPerson}\n            onChange={handleChange(\"contactPerson\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactNo}\n            onChange={handleChange(\"contactNo\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Whatsapp Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.WhatsappNo}\n            onChange={handleChange(\"WhatsappNo\")}\n          />\n        </Label>\n        <hr className=\"my-8\" />\n        <Button\n          onClick={() => setIsModalOpen(true)}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4 mx-3\"\n        >\n          Select Customer\n        </Button>\n        <hr className=\"my-8\" />\n        <Button\n          onClick={submitUnit}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4\"\n        >\n          Create Unit\n        </Button>\n      </div>\n    );\n  };\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>Unit Created Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const AccCustErr = () => {\n    return (\n      <>\n        <Modal isOpen={isErrModalOpen} onClose={() => setIsErrModalOpen(false)}>\n          <ModalHeader>Customer or Account Not Selected!</ModalHeader>\n          <ModalBody>\n            If Customer does not have any accounts under it, make them first.\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsErrModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <AddUnitModal\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setAccount={setAccount}\n        account={account}\n        customer={customer}\n        setCustomer={setCustomer}\n      />\n      <PageTitle>Add Unit</PageTitle>\n      {addForm()}\n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n      {AccCustErr()}\n    </>\n  );\n}\n\nexport default CreateUnit;\n"],"sourceRoot":""}