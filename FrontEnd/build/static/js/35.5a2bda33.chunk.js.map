{"version":3,"sources":["components/Modal/AssetFilters/CustomerSelection.js","pages/Calls/RegisterCall.js"],"names":["CustomerSelection","isModalOpen","setIsModalOpen","unit","setUnit","account","setAccount","customer","setCustomer","refresh","setRefresh","useState","customers","setCustomers","accounts","setAccounts","units","setUnits","tabIndex","setTabIndex","search","setSearch","handleChange","e","target","value","handleSubmit","a","preventDefault","payload","role","axios","url","API","method","data","response","console","log","useEffect","pickCustomer","_id","customerName","name","accountName","unitName","Axios","post","customerId","accs","pickAccount","accountId","u","pickUnit","isOpen","onClose","selectedIndex","onSelect","ind","onSubmit","className","placeholder","onChange","map","i","key","onClick","type","RegisterCall","useHistory","isReviewModalOpen","setIsReviewModalOpen","isReqFieldModal","setIsReqFieldModal","isAssetModal","setIsAssetModal","setTopHeading","useContext","TopBarContext","BottomBarContext","setBBarOpen","bbaropen","setAssetDetails","assetdetails","activerowid","setActiveRowId","page","setPage","setData","setIsOpen","isOpenTwo","setIsOpenTwo","disabler","setDisabler","Business","setBusiness","product","setProduct","selectedprod","setSelectedProd","searchtype","setSearchType","searchlabel","setSearchLabel","searchquery","setSearchQuery","totalResults","setTotalResults","onPageChange","p","pages","limit","filters","business","producttype","unitId","Emp","getId","out","total","callNo","date","contactPerson","phone","callStatus","problem","values","setValues","submitCall","JSON","stringify","newcall","assetId","class","xmlns","viewBox","d","disabled","selected","aria-label","aria-haspopup","user","serialno","moment","contractfrom","format","contractto","ponumber","podate","resultsPerPage","label"],"mappings":"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","file":"static/js/35.5a2bda33.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../../backendapi\";\n\nexport default function CustomerSelection({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n  refresh,\n  setRefresh,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      //   setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      //   setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              setRefresh(!refresh);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../backendapi\";\nimport moment from \"moment\"\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\n\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n\nimport { useHistory } from \"react-router-dom\";\n\n\n// --------ASSET\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport CustomerSelection from \"../../components/Modal/AssetFilters/CustomerSelection\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ChatIcon,\n  CartIcon,\n  MoneyIcon,\n  PeopleIcon,\n  ButtonsIcon,\n  HeartIcon,\n  EditIcon,\n  TrashIcon,\n} from \"../../icons\"\n/////////////----------------->>>>>> bug <<<<<------------customerList refresh-------------------------\n\nfunction RegisterCall() {\n  let history = useHistory();\n\n\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isReqFieldModal, setIsReqFieldModal] = useState(false);\n  const [isAssetModal, setIsAssetModal] = useState(false);\n  const { setTopHeading } = useContext(TopBarContext);\n\n  //---------------------------------- ASSETS VIEW STATES\n  // *\n  // *\n  // *\n  // *\n  // *\n  // *\n  // *\n  // *\n\n// Bottom bar stuff\n\n  const { bbaropen, setBBarOpen, setAssetDetails, assetdetails } = useContext(\n    BottomBarContext\n  );\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n\n\n\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  // dropdown and modals\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenTwo, setIsOpenTwo] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [Business, setBusiness] = useState(\"\");\n  const [product, setProduct] = useState(\"\");\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n\n  // -------Enabling Bottom Bar----\n  useEffect(() => {\n    setBBarOpen(1);\n    return () => {\n      setBBarOpen(0);\n      setAssetDetails({});\n    };\n  }, []);\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Assets Management\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          business: Business,\n          producttype: product,\n          customer: customer,\n          account: account,\n          unitId: unit._id,\n          customerId: customer._id,\n          accountId: account._id,\n          searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/asset/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, Business, product, refresh]);\n\n  // console.log(\"SELECTED PROD\",selectedprod,\"NOOOO\");\n\n const Asset=()=>{\n  return (\n    <>\n      {/* ---------------------Customer Selection Modal----------------------------------------- */}\n      <CustomerSelection\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setUnit={setUnit}\n        unit={unit}\n        customer={customer}\n        setCustomer={setCustomer}\n        account={account}\n        setAccount={setAccount}\n        refresh={refresh}\n        setRefresh={setRefresh}\n      />\n      {/* ---------------------Customer Selection Modal----------------------------------------- */}\n\n      {/* {floatbox ? <AssetFloat /> : null} */}\n      <div className=\"mb-64 mt-1\">\n        <div className=\"flex items-center font-bold my-2 text-xl\">\n          Pick Asset\n        </div>\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-6 \">\n            <div class=\"relative  \">\n              <button\n                class=\" shadow-md appearance-none h-full rounded border block w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                onClick={() => {\n                  setIsModalOpen(!isModalOpen);\n                }}\n                // value={sortBy}\n                // onChange={onSortToggle}\n              >\n                Pick Customer\n              </button>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            <div class=\"relative mx-5 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={Business}\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Business Type\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"AMC\">AMC</option>\n                <option value=\"WTY\">Warranty</option>\n                <option value=\"NOS\">NOS</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* ---------------------------Product Drop Down-------------------------------------- */}\n            <div className=\"relative z-40 \">\n              <button\n                onClick={() => {\n                  setIsOpen(!isOpen);\n                }}\n                className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n              >\n                {product ? product : \"Pick Product\"}\n              </button>\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n              <Dropdown isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"\");\n                  }}\n                >\n                  <span>All</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Console\");\n                  }}\n                >\n                  <span>Console</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"DMP\");\n                  }}\n                >\n                  <span>DMP</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Inkjet\");\n                  }}\n                >\n                  <span>Inkjet</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"KVM\");\n                  }}\n                >\n                  <span>KVM</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Laptop\");\n                  }}\n                >\n                  <span>Laptop</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Laser\");\n                  }}\n                >\n                  <span>Laser</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"LMP\");\n                  }}\n                >\n                  <span>LMP</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Module\");\n                  }}\n                >\n                  <span>Module</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Router\");\n                  }}\n                >\n                  <span>Router</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Scanner\");\n                  }}\n                >\n                  <span>Scanner</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Server\");\n                  }}\n                >\n                  <span>Server</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Desktop\");\n                  }}\n                >\n                  <span>Desktop</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Storage\");\n                  }}\n                >\n                  <span>Storage</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Switch\");\n                  }}\n                >\n                  <span>Switch</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"UPS\");\n                  }}\n                >\n                  <span>UPS</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Others\");\n                  }}\n                >\n                  <span>Others</span>\n                </DropdownItem>\n              </Dropdown>\n            </div>\n\n            {/* -------------------------------Search Type--------------------------------------- */}\n            <div className=\"relative \">\n              <button\n                onClick={() => {\n                  setIsOpenTwo(!isOpenTwo);\n                }}\n                className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n              >\n                {searchtype ? searchlabel : \"Pick Search Type\"}\n              </button>\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n              <Dropdown isOpen={isOpenTwo} onClose={() => setIsOpenTwo(false)}>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"\");\n                    setSearchLabel(\"\");\n                    setDisabler(true);\n                    setSearchQuery(\"\");\n                    setRefresh(!refresh);\n                  }}\n                >\n                  <span>All</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"kbdsno\");\n                    setSearchLabel(\"Keyboard Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Keyboard Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"mousesno\");\n                    setSearchLabel(\"Mouse Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Mouse Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"motherboardsno\");\n                    setSearchLabel(\"Motherboard Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Motherboard Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"monitorsno\");\n                    setSearchLabel(\"Monitor Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Monitor Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"hddsno\");\n                    setSearchLabel(\"HDD Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>HDD Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"cpusno\");\n                    setSearchLabel(\"CPU Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>CPU Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"ramsno\");\n                    setSearchLabel(\"Ram Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>RAM Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"smpssno\");\n                    setSearchLabel(\"SMPS Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>SMPS Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"fansno\");\n                    setSearchLabel(\"Fan Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Fan Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"opticaldrivesno\");\n                    setSearchLabel(\"Optical Drive Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Optical Drive Serial</span>\n                </DropdownItem>\n              </Dropdown>\n            </div>\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search\"\n                  disabled={disabler}\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n          </div>\n          {/* ----------------------------------------Row 2 -------------------------------------------------------------------- */}\n          {/* <div className=\"my-4 flex \">\n            <div class=\"relative \">\n              <select\n                class=\" shadow-md appearance-none h-full rounded border block w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                // value={sortBy}\n                // onChange={onSortToggle}\n              >\n                <option value=\"TIME_ASC\">Time(Latest)</option>\n                <option value=\"TIME_DESC\">Time(Oldest)</option>\n                <option value=\"NAME_ASC\">Name(A-Z)</option>\n                <option value=\"NAME_DESC\">Name(Z-A)</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n          </div> */}\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Customer</TableCell>\n                <TableCell>Unit</TableCell>\n                <TableCell>Business</TableCell>\n                <TableCell>Product</TableCell>\n                <TableCell>Product Serial</TableCell>\n                <TableCell>Contract From</TableCell>\n                <TableCell>Contract To</TableCell>\n                <TableCell>Purchase Number</TableCell>\n                <TableCell>Purchase Date</TableCell>\n                \n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <TableRow\n                  className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                    activerowid == user._id\n                      ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                      : \"white\"\n                  } `}\n                  key={i}\n                  onClick={() => {\n                    setActiveRowId(user._id);\n                    // console.log(\"the id is \" + user._id);\n                    setSelectedProd(user);\n                    setAssetDetails(user);\n                    // console.log(user.product.keyboard[0].kbdname);\n                  }}\n                >\n                  <TableCell className=\"w-8\">\n                    <div className=\"flex items-center text-sm \">\n                      {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                      <div>\n                        <p className=\"font-semibold\">{user.customerName}</p>\n                        <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.unitName}</span>\n                  </TableCell>\n                  <TableCell>\n                    <Badge\n                      type={user.business == \"AMC\" ? \"primary\" : \"success\"}\n                    >\n                      {user.business}\n                    </Badge>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.producttype}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.product.serialno}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.contractfrom).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.contractto).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.ponumber}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.podate).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  \n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n          <Button className=\"mx-5 mb-10\" onClick={submitCall}>\n            Register Call\n          </Button>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n }\n// *\n// *\n// *\n// *\n// *\n// *\n// *\n  //---------------------------------- ASSETS VIEW STATES\n\n\n  const [values, setValues] = useState({\n    //both\n    callNo:\"\",\n    date:\"\",\n    contactPerson:\"\",\n    phone:\"\",\n    callStatus:\"Pending for allocation\",\n    problem:\"\",\n  });\n  const [err, setErr] = useState({\n  });\n\n  // ----------------------Heading Use Effect-------------\n\n  useEffect(() => {\n    setTopHeading(\"Register Call\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n\n  const submitCall = async () => {\n    if (\n      (values.callNo === \"\") |\n      // (values.contactPerson === \"\") |\n      // (values.phone === \"\") |\n      (values.problem === \"\") \n    ) {\n      setIsReqFieldModal(true);\n      return;\n    }\n    if (\n      (JSON.stringify(selectedprod)== JSON.stringify({})) \n    ) {\n      setIsAssetModal(true);\n      return;\n    }\n    // e.preventDefault();\n    const newcall = {\n      callNo:values.callNo,\n      date:values.date,\n      contactPerson: values.contactPerson,\n      phone:values.phone,\n      problem:values.problem,\n      unitId:selectedprod.unitId,\n      unitName:selectedprod.unitName,\n      accountId:selectedprod.accountId,\n      accountName:selectedprod.accountName,\n      customerId:selectedprod.customerId,\n      customerName:selectedprod.customerName,\n      assetId:selectedprod._id,\n      callStatus:0,\n      // employeeId:\"\"\n\n    };\n    console.log(\"CALL->\",newcall)\n    try {\n      await axios({\n        url: `${API}/call/${Emp.getId()}/create`,\n        method: \"POST\",\n        data: newcall,\n      });\n      setIsReviewModalOpen(true);\n      console.log(\"Done\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>\n            Created Successfully!\n          </ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n\n  const ReqFieldErrModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReqFieldModal}\n          onClose={() => setIsReqFieldModal(false)}\n        >\n          <ModalHeader>Required fields are not filled!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReqFieldModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const AssetSelectedModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isAssetModal}\n          onClose={() => setIsAssetModal(false)}\n        >\n          <ModalHeader>Asset is not selected!</ModalHeader>\n          <ModalBody>Please select asset before registering call.</ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsAssetModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n\n\n\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-2 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Call Information</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n        {/* ------------------------Row 1-------------------------- */}\n        <div className=\"flex-row flex space-x-3\">\n        <>\n              <div className=\"flex flex-col w-full\">\n                <Label className=\"w-full\">\n                  <span>Call Number*</span>\n                  <Input\n                    className=\"mt-1\"\n                    type=\"text\"\n                    value={values.callNo}\n                    onChange={handleChange(\"callNo\")}\n                  />\n                </Label>\n                {/* <HelperText valid={false}>{err.callNo}</HelperText> */}\n              </div>\n            </>\n         \n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Date*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"date\"\n                value={values.date}\n                onChange={handleChange(\"date\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.username}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Conact Person*</span>\n            <Input\n              className=\"mt-1\"\n              type=\"email\"\n              placeholder=\"\"\n              value={values.contactPerson}\n              onChange={handleChange(\"contactPerson\")}\n            />\n          </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Phone Number*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.phone}\n                onChange={handleChange(\"phone\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.username}</HelperText> */}\n          </div>\n        </div>\n        {/* ----------------------Row 2 ----------------------------- */}\n        <div className=\"flex-row flex space-x-3 \">\n          \n        <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Problem Description*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.problem}\n                onChange={handleChange(\"problem\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.username}</HelperText> */}\n          </div>\n        </div>\n        {/* ///////////////////////////////////////////////////////// */}\n        {/* <Label className=\"font-bold mt-2 mb-1\">\n        \n        </Label> */}\n        \n        {/* ///////////////////////////////////////////////////////// */}\n       \n          <>\n            {/* <Button\n              onClick={() => setIsModalOpen(true)}\n              aria-label=\"Notifications\"\n              aria-haspopup=\"true\"\n              className=\"mt-4 mr-2\"\n            >\n              {customer.customerName === \"\" ? (\n                <>Select Associations</>\n              ) : (\n                <>Customer: {customer.customerName}</>\n              )}\n            </Button> */}\n          </>\n      \n        \n        \n      </div>\n    );\n  };\n  \n  \n  return (\n    <>\n     \n      {/* <PageTitle>Add Customer</PageTitle> */}\n      {addForm()}\n      \n      {Asset()}\n      \n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n      {ReqFieldErrModal()}\n      {AssetSelectedModal()}\n      \n      \n    </>\n  );\n}\n\nexport default RegisterCall;\n"],"sourceRoot":""}